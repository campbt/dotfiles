# ----------------------
#   Cheat Sheet
# ----------------------
# Windows:
#   C-a c             Create a new window
#   C-a n/p           Navigate to Next / Prev window
#   C-a l             Last window (toggle)
#   C-a ,             Rename window
#   C-a &             Delete window
#   C-a F7/F8         Move tab to left/right
#
# Splits:
#   C-a v/s           Create a vertical / horizontal split
#   C-a hjkl          Move between splits (works with vim splits!)
#   C-a {}            Move split to prev/next position
#   C-a \             Move to last split (toggle)
#   C-a space         Cycle between "modes"
#   C-a z             Zoom in / Zoom out on a single pane
#
# Session:
#   tmux attach -t base
#   tmux new -s base
#   tmux rename-session new_name
#
# Selection:
#   C-a [             Enter Selection mode
#       v             Start Selection
#       y             Copy Selection
#   C-a P             Paste Selection

# ----------------------
#   Configuration
# ----------------------

set -g default-terminal "screen-256color" # Fixes some issues with vim colors

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows
setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

# panes
# set -g pane-border-fg black
set -g pane-border-style fg=black
# set -g pane-active-border-fg blue
set -g pane-active-border-style "bg=default fg=blue"

# messaging
# set -g message-fg yellow
# set -g message-bg brightblack
set -g message-style fg=yellow,bg=brightblack
# set -g message-command-fg blue
# set -g message-command-bg brightblack
set -g message-command-style fg=blue,bg=brightblack

#window mode
# setw -g mode-bg colour6
# setw -g mode-fg colour0
set -g mode-style fg=colour0,bg=colour6

# window status (tabs indicating which window is selected)
#setw -g window-status-format "#[fg=brightblack]#[bg=black] #I #[fg=brightblack]#[bg=default] #W "
#setw -g window-status-current-format "#[fg=black]#[bg=blue] #I #[fg=blue]#[bg=black] #W "
setw -g window-status-format "#[bg=default] #[fg=blue]#I#[fg=brightblack]:#W "
setw -g window-status-current-format "#[bg=brightblack] #[fg=blue]#I#[fg=white]:#W#{?window_zoomed_flag, üîç ,} "

# Text in info slots
set -g status-left ''
set -g status-right ''

## Status bar design
# status line
# set -g status-bg default
# set -g status-fg black
set -g status-style fg=black,bg=default
set -g status-justify left
set -g status-interval 5 # seconds between updates

# Show tmux tabs only when there is more than one tab
set-hook -g 'window-linked' 'run-shell -b "if [ \#{session_windows} -eq 1 ]; then tmux set-option status off; else tmux set-option status on; fi"'
set-hook -g 'window-unlinked' 'run-shell -b "if [ \#{session_windows} -eq 1 ]; then tmux set-option status off; else tmux set-option status on; fi"'

# ----------------------
#   Key Bindings
# ----------------------

# Use C-a not C-b as the prefix - like screen
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# split panes using vim mapping (v and s) and open in same directory
bind c new-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
# edit configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Clear screen back on C-l (after the prefix!)
bind C-l send-keys 'C-l'

# Improved selection commands
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Move tabs around like in Vim
bind-key -r F7 swap-window -t -1
bind-key -r F8 swap-window -t +1
